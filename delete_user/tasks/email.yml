- hosts: bareos-int
  become: true
  vars:
    maildir: /mnt/backup/nas4-backup/mail
    mail: "{{ hostvars.get('localhost').get('email') }}.tar.gz"
    mail_uniq: "{{ mail }}.{{ ansible_date_time.epoch }}"

  tasks:

  # Need version 6.5.4 to function properly
  - name: Check if offlineimap exists
    command: which offlineimap
    register: offlineimap_exists
    ignore_errors: yes

  - name: Generate offlineimap template
    template: src=../templates/offlineimaprc.j2 dest=/tmp/offlineimap_{{ hostvars.get('localhost').get('username') }}
    when: '"it-economics" in mail'

  # TODO RUN ASYNC and wait for finish
  - name: Run offlineimap for given user
    command: offlineimap -c /tmp/offlineimap_{{ hostvars.get('localhost').get('username') }}
    async: 18000
    poll: 120
    ignore_errors: yes
    when: '"it-economics" in mail'

  - name: Create tar file and move it to /tmp/{{ hostvars.get('localhost').get('email') }}.tar.gz
    command: tar cfz /{{ maildir }}/{{ mail_uniq }} /tmp/{{ hostvars.get('localhost').get('username') }}_mail
    async: 18000
    poll: 120
    when: '"it-economics" in mail'

  - name: Cleanup mails
    file: path=/tmp/{{ hostvars.get('localhost').get('username') }}_mail state=absent
    when: '"it-economics" in mail'

  - name: Cleanup offline imap
    file: path=/tmp/offlineimap_{{ hostvars.get('localhost').get('username') }} state=absent
    when: '"it-economics" in mail'

  - name: Test encryption key
    shell: "echo {{ hostvars.get('localhost').get('encryption_password') }} | gpg --no-tty -d --passphrase-fd 0 {{ maildir }}/DONOTDELETE.gpg | grep test"
    register: encryption

  - name: Encrypt tar.gz
    shell: echo {{ hostvars.get('localhost').get('encryption_password') }} | gpg --no-tty -c --passphrase-fd 0 {{ maildir }}/{{ mail_uniq }}
    when: '"it-economics" in mail and encryption is success'
#    no_log: yes

  - name: Ensure unecrypted files are removed
    file: path={{ maildir }}/{{ mail_uniq }} state=absent
    when: '"it-economics" in mail'

  - name: Fail when encryption key was wrong
    fail: msg="Encryption key is wrong"
    when: encryption is failed
