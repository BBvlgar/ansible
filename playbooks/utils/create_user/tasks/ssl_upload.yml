---
- hosts: certs_download
  become: true
 
  vars_files:
    - ../../../environments/{{ env }}/group_vars/manage_user_secrets.yml
 
  tasks:
    - set_fact:
        user: "{{ hostvars.get('localhost').get('user') }}"
        keydir: "{{ hostvars.get(groups['pki'][0]).get('keydir') }}"
    - block:    
      - block:
        # Deploy P12
        - name: Copy p12 to remote
          copy: src=/tmp/it-economics_{{ user.registration.user.mail }}.p12 dest=/tmp/it-economics_{{ user.registration.user.mail }}.p12

        - name: Move file to destination
          shell: docker exec {{ container }} mkdir -p /data/{{ user.registration.user.mail }} && docker cp /tmp/it-economics_{{ user.registration.user.mail }}.p12 {{ container }}:/data/{{ user.registration.user.mail }}/

        # Deploy CER
        - name: Copy CER to s3
          local_action: aws_s3 src=/tmp/it-economics_{{ user.registration.user.mail }}.cer aws_access_key={{ aws_access_key }} aws_secret_key={{ aws_secret_key }} bucket=ca.it-economics.de mode=put region=eu-west-1 object=/public_keys/it-economics_{{ user.registration.user.mail }}.cer

        always:
        - name: Cleanup
          file: path={{ item }} state=absent
          with_items:
            - /tmp/it-economics_{{ user.registration.user.mail }}.p12
            - /tmp/it-economics_{{ user.registration.user.mail }}.cer
      when: user.registration.contract.employerId != '12700'            
