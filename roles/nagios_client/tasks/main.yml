---

# gather all additional locations with custom nagios command files
- name: prepare custom command file locations
  set_fact:
    cfile_helper: "{{ cfile_helper | default( [] ) + [ role_path + '/../../custom_files/' + item + '/*' ] }}"
  with_items: "{{ nagios_custom_groups_command_file_paths | default( [] ) + nagios_custom_host_command_file_paths | default( [] ) }}"

- name: gather facts
  set_fact:
    files_glob:           "{{ nagios_default_command_file_paths + cfile_helper | default( [] ) }}"
    nagios_allowed_hosts: "{{ nagios_default_allowed_hosts + nagios_group_allowed_hosts | default( [] ) + nagios_host_allowed_hosts | default( [] ) }}"
    nagios_commands:      "{{ nagios_default_commands | combine( nagios_group_commands | default( {} ) ) | combine( nagios_host_commands | default( {} ) ) }}"

- name: Ensure dependencies are installed
  package:
    name: "{{ item.name }}"
    state: "{{ item.state | default( package_state ) }}"
  with_items: "{{ install_tools }}"
  become: yes

- name: Ensure folder exists
  file: 
    path: "{{ item }}" 
    state: directory 
    owner: "{{ nagios.user }}" 
    group: "{{ nagios.user }}" 
  with_items:
    - /usr/lib/nagios
    - /var/run/nagios

- name: Ensure nagios commands / plugins are installed
  copy:
    src: "{{ item }}"
    dest: "/usr/lib/nagios/plugins/{{ item | basename }}"
    mode: 0755
  with_fileglob: "{{ files_glob }}"

- name: Ensure config is installed
  template: 
    src: nrpe.cfg.j2 
    dest: /etc/nagios/nrpe.cfg 
    mode: 0644 
    owner: root 
    group: root
  notify: restart nrpe

- name: Ensure nagios-nrpe-server on client is restarted
  service: 
    name: nagios-nrpe-server 
    state: restarted

- name: test if ufw is installed and active
  command: "ufw status | grep 'Status: active'"
  become: yes
  register: ufw_status

- name: Configure ufw rules
  ufw:
    rule:  "allow"
    port:  "{{ nagios.port }}"
    proto: "tcp"
  become: yes
  when: ufw_status.rc == 0

- name: Configure ufw rules
  ufw:
    rule:  "allow"
    port:  "{{ nagios.port }}"
    proto: "udp"
  become: yes
  when: ufw_status.rc == 0

- name: restart ufw
  service:
    name:  ufw
    state: restarted

...
