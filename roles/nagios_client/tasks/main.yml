---

- name: Ensure dependencies are installed
  package:
    name: "{{ package.name }}"
    state: "{{ package.state | default( package_state ) }}"
  with_items: "{{ nagios_install_tools }}"
  loop_control:
    loop_var: package
  become: yes

- name: Ensure folder exists
  file: 
    path: "{{ folder }}"
    state: directory
    owner: "{{ nagios.user }}"
    group: "{{ nagios.user }}"
  with_items:
    - /usr/lib/nagios
    - /var/run/nagios
  loop_control:
    loop_var: folder

- name: Ensure plugins are installed
  copy: 
    src: "{{ filename }}"
    dest: "/usr/lib/nagios/plugins/{{ filename | basename }}"
    mode: 0755
  with_fileglob:
    - ./*
  loop_control:
    loop_var: filename

- name: Ensure config is installed
  template: 
    src: nrpe.cfg.j2 
    dest: /etc/nagios/nrpe.cfg
    mode: 0644
    owner: root
    group: root
  notify: restart nrpe

- name: Ensure nagios-nrpe-server on client is restarted
  service: 
    name: nagios-nrpe-server
    state: restarted

- name: test if ufw is installed
  command: "which ufw"
  become: yes
  register: ufw_installed
  ignore_errors: yes

- name: Configure ufw rules
  ufw:
    rule:  "allow"
    port:  "{{ nagios.port }}"
    proto: "{{ rule_proto }}"
  become: yes
  when: ufw_installed.rc == 0
  with_items:
    - "tcp"
    - "udp"
  loop_control:
    loop_var: rule_proto

- name: test if ufw is active
  command: "ufw status"
  become: yes
  register: ufw_status
  ignore_errors: yes
  when: 
    - ufw_installed is defined
    - ufw_installed.rc == 0

- name: restart ufw
  service:
    name:  ufw
    state: restarted
  become: yes
  when:
    - ufw_installed is defined
    - ufw_installed.rc == 0
    - ufw_status is defined
    - ufw_status.stdout is regex( ufw_status_regex )

...
