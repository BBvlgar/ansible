---

- name: merge global_ufw_rules and host_ufw_rules into ufw_rules
  set_fact:
    ufw_rules: "{{ global_ufw_rules | default([]) }} + {{ host_ufw_rules | default([]) }}"

- name: root block
  block:

    - name: Install ufw as firewall
      package:
        name: "{{ item.name }}"
        state: "{{ item.state | default( package_state ) }}"
      with_items: "{{ install_packages }}"
      when: only_install_ufw is not defined or only_install_ufw | bool

    - name: Configure ufw defaults
      ufw:
        direction: "{{ item.direction }}"
        policy:    "{{ item.policy }}"
      with_items: "{{ ufw_defaults }}"
      when: only_install_ufw is not defined or only_install_ufw | bool

    - name: Configure ufw rules
      ufw:
        rule:  "{{ item.rule }}"
        port:  "{{ item.port | default( none ) }}"
        proto: "{{ item.proto | default('tcp') }}"
        src: "{{ item.src | default('any') }}"
        dest: "{{ item.dest | default('any') }}"
      with_items: "{{ ufw_rules }}"
      when: only_install_ufw is not defined or only_install_ufw | bool

    - name: restart ufw
      service:
        name:  ufw
        state: restarted
      when: ( restart_ufw is defined and restart_ufw | bool ) or ( restart_ufw is not defined and only_install_ufw is defined and ( only_install_ufw | bool ) )

    - name: enable ufw
      command: ufw --force enable
      when: ( enable_ufw  is defined and enable_ufw  | bool ) or ( enable_ufw  is not defined and only_install_ufw is defined and ( only_install_ufw | bool ) )

  become: true

...
