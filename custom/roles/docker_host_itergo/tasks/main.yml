---
- name: Install prerequisites
  apt:
    name: ['apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent' ,'software-properties-common']
    update_cache: yes

- name: Add Docker GPG key
  apt_key: url=https://download.docker.com/linux/ubuntu/gpg

- name: Add Docker APT repository
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/{{ansible_distribution|lower}} {{ansible_distribution_release}} stable

- name: Install Docker
  apt:
    name: ['docker-ce', 'python3-pip']
    update_cache: yes

- name: Ensure service is started
  service: name=docker state=started

- name: Verify that docker works
  command: docker run --rm hello-world

- name: Set pull credentials as root user
  become: true
  command: docker login -u {{ docker_pull_user }} -p {{ docker_pull_password }} {{ docker_registry }}

- name: Install python markdown
  command: pip3 install --upgrade markdown

- name: Install python security
  pip: name={{ item }} state=latest extra_args="--ignore-installed"
  with_items:
      - urllib3[secure]

- name: Install python dependencies
  command: pip3 install --upgrade {{ item }}
  with_items:
    - pip
    - virtualenv
  #  - docker-py

- name: Ensure AWS-Credentials exist
  template: src=aws-logger.conf.j2 dest=/etc/docker/aws-logger.conf
  when: awslogs_key is defined

- name: Setting Docker defaults
  template: src=docker-defaults.j2 dest=/etc/default/docker
  when: awslogs_key is defined
  register: defaults

- name: Install mount script when encrypted_data exists
  template: src=mount.encrypted_data dest=/usr/local/bin/mount.encrypted_data mode=755 owner=root group=root
  when: encrypted_data is defined

- name: Ensure service is restarted
  service: name=docker state=restarted
  when: defaults.changed
