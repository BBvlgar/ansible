- name: Playbook to set DNS entry for loadbalancer
  hosts: localhost
  gather_facts: no

  tasks:
    - name: Get informations about Itergo Cloudformation Stack
      cloudformation_info:
        stack_name: itergotest
        stack_resources: yes
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        security_token: "{{ security_token }}"
        region: "{{ region }}"
      register: cloudformation_output

    - name: Get informations about Jira loadbalancer
      elb_application_lb_info:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        region: "{{ region }}"
        load_balancer_arns:
          - "{{ cloudformation_output.cloudformation['itergotest'].stack_resources['jiraLoadBalancer'] }}"
      register: elb_jira_output

    - name: Get informations about Confluence loadbalancer
      elb_application_lb_info:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        region: "{{ region }}"
        load_balancer_arns:
          - "{{ cloudformation_output.cloudformation['itergotest'].stack_resources['confluenceLoadBalancer'] }}"
      register: elb_confluence_output

    - name: set dns variable
      set_fact:
        dns_jira: "{{ elb_jira_output.load_balancers[0].dns_name }}"
        dns_confluence: "{{ elb_confluence_output.load_balancers[0].dns_name }}"


    - name: debug
      debug: msg="{{ dns_jira }} && {{ dns_confluence }}"

    - name: set jira dns on cloudflare
      cloudflare_dns:
        zone: it-economics-testing.de
        record: itergo-jira.aws
        type: CNAME
        value: "{{ dns_jira }}"
        ttl: 1
        account_email: "{{ account_email }}"
        api_token: "{{ api_token }}"
        state: present

    - name: set confluence dns on cloudflare
      cloudflare_dns:
        zone: it-economics-testing.de
        record: itergo-confluence.aws
        type: CNAME
        value: "{{ dns_confluence }}"
        ttl: 1
        account_email: "{{ account_email }}"
        api_token: "{{ api_token }}"
        state: present
