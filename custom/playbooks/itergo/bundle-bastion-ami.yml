- hosts: amibuilder

  vars:
    built_at: "{{ ansible_date_time.iso8601 }}"
    built_at_epoch: "{{ ansible_date_time.epoch }}"


  tasks:
#  - name: Wait until instance is ready to be bundled
#    pause: seconds=60

    - name: bundle ami
      ec2_ami:
        instance_id: "{{ ami_instance.tagged_instances.0.id }}"
        region: "{{ region }}"
        state: present
        description: This was provisioned  {{ built_at }}
        name: bastion-{{ built_at_epoch }}
        wait: no
        tags:
          Name: "itergo-bastion-{{ ansible_date_time.iso8601 }}"
          State: "{{ build_state }}"
          Customer: "itergo"
      register: amioutput

    - name: output new ami info
      debug: msg="AMI ID {{ amioutput.image_id }} \n Built at {{ built_at }}"

    - name: Wait 10 Minutes as AWS is stupid sometimes
      pause: seconds=300

    - name: share ami with it-e account for use in environments/testing
      shell: aws ec2 --region {{ region }} modify-image-attribute --image-id {{ amioutput.image_id }} --launch-permission "{\"Add\":[{\"UserId\":\"{{ item }}\"}]}"
      with_items: "{{ shared_with }}"

#  - name: Wait for server to come back after bundle
 #   wait_for: host={{ groups['atlassian-application'][0] }} state=started port=22 timeout=300 search_regex=OpenSSH

    - name: Wait 2 Minutes to be sure everything is up
      pause: seconds=120
