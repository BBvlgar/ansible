---
- name: Rollout Playbook Hosting Application
  hosts: localhost
  gather_facts: no

  tasks:
    - name: Update Cloudformation
      include_role:
        name: run-cloudformation
      vars:
        app: "{{ all }}"

    - name: Get informations about Cloudformation Stack
      cloudformation_info:
        stack_name: itergotest
        stack_resources: yes
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        security_token: "{{ security_token }}"
        region: "{{ region }}"
      register: cloudformation_output


    - name: Get informations about Jira autoscaling group
      ec2_asg_info:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        region: "{{ region }}"
        name: "{{ cloudformation_output.cloudformation['itergotest'].stack_resources['jiraAsg'] }}"
      register: asg_jiraAsg_output
      failed_when: "{{ asg_jiraAsg_output.results | length == 0 }}"

    - name: debug
      debug: msg="{{ asg_jiraAsg_output.results[0].instances[0].instance_id }}"


    - name: Terminate Jira instance to perform update
      ec2:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        security_token: "{{ security_token }}"
        region: "{{ region }}"
        state: 'absent'
        instance_ids: '{{ asg_jiraAsg_output.results[0].instances[0].instance_id }}'

    - name: Get informations about Confluence autoscaling group
      ec2_asg_info:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        region: "{{ region }}"
        name: "{{ cloudformation_output.cloudformation['itergotest'].stack_resources['confluenceAsg'] }}"
      register: asg_confluenceAsg_output
      failed_when: "{{ asg_confluenceAsg_output.results | length == 0 }}"

    - name: debug
      debug: msg="{{ asg_confluenceAsg_output.results[0].instances[0].instance_id }}"


    - name: Terminate Confluence instance to perform update
      ec2:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        security_token: "{{ security_token }}"
        region: "{{ region }}"
        state: 'absent'
        instance_ids: '{{ asg_confluenceAsg_output.results[0].instances[0].instance_id }}'
